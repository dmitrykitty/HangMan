"if_statement","Conditional branch that executes code only when a condition is true","easy"
"else","Alternate block executed when an if condition is false","easy"
"switch","Multi-branch selection statement that chooses a case based on an integer or enum value","easy"
"case","Labeled branch in a multi-way selection that runs if its constant value matches the switch expression","easy"
"default","Fallback branch in a switch statement executed if no case value matches","easy"
"for_loop","Loop structure with initialization, condition check, and iteration expression, used to repeat a block a specific number of times","easy"
"while_loop","Loop that repeats a block as long as a given condition remains true","easy"
"do_while_loop","Post-test loop that executes a block at least once before checking its continuation condition","easy"
"break","Statement that immediately exits the nearest enclosing loop or switch","easy"
"continue","Statement that skips the rest of the current loop iteration and begins the next one","easy"
"goto","Unconditional jump statement transferring execution to a labeled location (discouraged in structured programming)","easy"
"return","Statement that exits a function and optionally provides a value back to the caller","easy"
"function","Reusable block of code (subroutine) that can be called with arguments to perform a specific task","easy"
"main","Special function where program execution starts in C/C++","easy"
"scope","Region of a program where a name (variable, function, etc.) is visible and accessible","easy"
"class","User-defined type that serves as a blueprint for objects, bundling data and operations on that data","easy"
"struct","User-defined type similar to a class but with public members by default (often used for simple data aggregates)","easy"
"object","Instance of a class created in memory, representing a concrete entity with state and behavior","easy"
"constructor","Special class member function called when a new object is created, used to initialize the object","easy"
"destructor","Special class member function called when an object is destroyed, used to clean up resources","easy"
"pointer","Variable that holds a memory address, allowing indirect access to the value at that address","easy"
"array","Contiguous sequence of elements in memory, accessible by an index","easy"
"string","Sequence of characters representing text (in C++, often managed by std::string)","easy"
"bool","Boolean data type that can hold true or false values","easy"
"char","Fundamental data type representing a single character (typically one byte)","easy"
"float","Single-precision (typically 32-bit) numeric type for real (fractional) numbers","easy"
"double","High-precision (typically 64-bit) floating-point type for real (fractional) numbers","easy"
"void","Keyword indicating the absence of any type, e.g. for functions that return no value","easy"
"true","Boolean literal indicating a yes/affirmative condition","easy"
"false","Boolean literal indicating a no/negative condition","easy"
"NULL","Macro representing a pointer that points to nothing (usually defined as 0 in C)","easy"
"nullptr","C++ keyword (introduced in C++11) representing a pointer to no object (null pointer)","easy"
"cout","Standard output stream object (from iostream) used to print to the console","easy"
"endl","Output manipulator that inserts a newline character and flushes the output stream","easy"
"printf","C standard library function that formats and outputs text to the standard output (console)","easy"
"scanf","C standard library function that reads formatted input from standard input (keyboard) into variables","easy"
"malloc","C library function that allocates a block of memory on the heap of a specified size","easy"
"free","C library function that releases a previously allocated block of memory back to the system","easy"
"delete","C++ operator used to deallocate memory and destroy an object that was created with new","easy"
"const","Keyword indicating that a variableâ€™s value cannot be modified after initialization","easy"
"enum","User-defined type consisting of a set of named integral constants","easy"
"vector","Dynamic array container from the C++ standard library (STL) that can change size and supports random access","easy"
"rand","C standard library function that returns a pseudorandom integer","easy"
"parameter","Variable in a function definition that receives a value (argument) when the function is called","easy"
"argument","Actual value or expression passed to a function when calling it","easy"
"header","File containing declarations (such as functions or classes) to be included in source files (via #include)","easy"
"else_if","Tests another condition if the previous if or else_if was false","easy"
"break","Exits a loop or switch statement before it finishes normally","easy"
"true","Boolean literal representing a yes or affirmative condition","easy"
"false","Boolean literal representing a no or negative condition","easy"
"void","Specifies that a function returns nothing","easy"
"enum","Defines a set of named integer constants","easy"
"long","Integer type with typically more storage than int","easy"
"char","Represents a single character, usually stored in one byte","easy"
"auto","Lets the compiler deduce the type of a variable from its initializer","easy"
"puts","Prints a string to the standard output followed by a newline","easy"
"gets","Reads a line of text from the standard input (not safe, but educational)","easy"
"atoi","Converts a string of digits into an integer value","easy"
"strlen","Returns the number of characters in a null-terminated string","easy"
"strcpy","Copies one C-style string to another","easy"
"memset","Fills a block of memory with a specific value","easy"
"clock","Returns processor time used by the program since it started","easy"
"swap","Exchanges the values of two variables","easy"
"fill","Assigns a given value to every element in a range","easy"
"find","Searches for a value in a sequence and returns its position","easy"
"count","Counts how many times a value appears in a sequence","easy"